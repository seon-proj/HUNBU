/*
 * This file is generated by jOOQ.
 */
package io.hunsu.hunbu;


import io.hunsu.hunbu.tables.Posting;
import io.hunsu.hunbu.tables.Reply;
import io.hunsu.hunbu.tables.User;
import io.hunsu.hunbu.tables.records.PostingRecord;
import io.hunsu.hunbu.tables.records.ReplyRecord;
import io.hunsu.hunbu.tables.records.UserRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * hunbu.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<PostingRecord> KEY_POSTING_PRIMARY = Internal.createUniqueKey(Posting.POSTING, DSL.name("KEY_POSTING_PRIMARY"), new TableField[] { Posting.POSTING.ID }, true);
    public static final UniqueKey<ReplyRecord> KEY_REPLY_PRIMARY = Internal.createUniqueKey(Reply.REPLY, DSL.name("KEY_REPLY_PRIMARY"), new TableField[] { Reply.REPLY.ID }, true);
    public static final UniqueKey<UserRecord> KEY_USER_PRIMARY = Internal.createUniqueKey(User.USER, DSL.name("KEY_USER_PRIMARY"), new TableField[] { User.USER.ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<PostingRecord, UserRecord> USER_ID_FK = Internal.createForeignKey(Posting.POSTING, DSL.name("USER_ID_FK"), new TableField[] { Posting.POSTING.USER_ID }, Keys.KEY_USER_PRIMARY, new TableField[] { User.USER.ID }, true);
    public static final ForeignKey<ReplyRecord, ReplyRecord> PARENT_REPLY_ID_FK = Internal.createForeignKey(Reply.REPLY, DSL.name("PARENT_REPLY_ID_FK"), new TableField[] { Reply.REPLY.PARENT_REPLY_ID }, Keys.KEY_REPLY_PRIMARY, new TableField[] { Reply.REPLY.ID }, true);
}
