/*
 * This file is generated by jOOQ.
 */
package io.hunsu.hunbu.tables.records;


import io.hunsu.hunbu.tables.Reply;

import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class ReplyRecord extends UpdatableRecordImpl<ReplyRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>hunbu.REPLY.ID</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>hunbu.REPLY.ID</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>hunbu.REPLY.USER_ID</code>.
     */
    public void setUserId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>hunbu.REPLY.USER_ID</code>.
     */
    public Integer getUserId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>hunbu.REPLY.TEXT</code>.
     */
    public void setText(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>hunbu.REPLY.TEXT</code>.
     */
    public String getText() {
        return (String) get(2);
    }

    /**
     * Setter for <code>hunbu.REPLY.PARENT_REPLY_ID</code>.
     */
    public void setParentReplyId(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>hunbu.REPLY.PARENT_REPLY_ID</code>.
     */
    public Integer getParentReplyId() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>hunbu.REPLY.POSTING_ID</code>.
     */
    public void setPostingId(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>hunbu.REPLY.POSTING_ID</code>.
     */
    public Integer getPostingId() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>hunbu.REPLY.CREATED_AT</code>.
     */
    public void setCreatedAt(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>hunbu.REPLY.CREATED_AT</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>hunbu.REPLY.UPDATED_AT</code>.
     */
    public void setUpdatedAt(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>hunbu.REPLY.UPDATED_AT</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ReplyRecord
     */
    public ReplyRecord() {
        super(Reply.REPLY);
    }

    /**
     * Create a detached, initialised ReplyRecord
     */
    public ReplyRecord(Integer id, Integer userId, String text, Integer parentReplyId, Integer postingId, LocalDateTime createdAt, LocalDateTime updatedAt) {
        super(Reply.REPLY);

        setId(id);
        setUserId(userId);
        setText(text);
        setParentReplyId(parentReplyId);
        setPostingId(postingId);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
        resetChangedOnNotNull();
    }
}
